{"version":3,"file":"flowGraphSetPropertyBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAGvD,OAAO,EAAE,iCAAiC,EAAE,MAAM,yCAAyC,CAAC;AAC5F,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAGxD,OAAO,EAAE,sBAAsB,EAAE,MAAM,8BAA8B,CAAC;AActE;;;GAGG;AACH,MAAM,OAAO,yBAAkC,SAAQ,iCAAiC;IAUpF,YAA0B,MAA+C;QACrE,KAAK,CAAC,MAAM,CAAC,CAAC;QADQ,WAAM,GAAN,MAAM,CAAyC;QAGrE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,iBAAiB,GAAG,IAAI,sBAAsB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAEM,QAAQ,CAAC,OAAyB;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAEM,SAAS,CAAC,sBAA2B,EAAE;QAC1C,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACrC,mBAAmB,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnE,CAAC;IAEM,YAAY;QACf,OAAO,oBAAoB,CAAC;IAChC,CAAC;CACJ;AACD,aAAa,CAAC,oBAAoB,EAAE,yBAAyB,CAAC,CAAC","sourcesContent":["import { RichTypeAny } from \"../../flowGraphRichTypes\";\r\nimport type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { FlowGraphWithOnDoneExecutionBlock } from \"../../flowGraphWithOnDoneExecutionBlock\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../flowGraphBlock\";\r\nimport type { FlowGraphPath } from \"../../flowGraphPath\";\r\nimport { FlowGraphPathComponent } from \"../../flowGraphPathComponent\";\r\n\r\n/**\r\n * @experimental\r\n * Configuration for the set property block.\r\n */\r\nexport interface IFlowGraphSetPropertyBlockConfiguration extends IFlowGraphBlockConfiguration {\r\n    /**\r\n     * The path of the entity whose property will be set. Needs a corresponding\r\n     * entity on the context variables.\r\n     */\r\n    path: FlowGraphPath;\r\n}\r\n\r\n/**\r\n * @experimental\r\n * Block that sets a property on a target object.\r\n */\r\nexport class FlowGraphSetPropertyBlock<ValueT> extends FlowGraphWithOnDoneExecutionBlock {\r\n    /**\r\n     * Input connection: The value to set on the property.\r\n     */\r\n    public readonly value: FlowGraphDataConnection<ValueT>;\r\n    /**\r\n     * The component with the templated inputs for the provided path.\r\n     */\r\n    public readonly templateComponent: FlowGraphPathComponent;\r\n\r\n    public constructor(public config: IFlowGraphSetPropertyBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.value = this.registerDataInput(\"value\", RichTypeAny);\r\n        this.templateComponent = new FlowGraphPathComponent(config.path, this);\r\n    }\r\n\r\n    public _execute(context: FlowGraphContext): void {\r\n        const value = this.value.getValue(context);\r\n        this.templateComponent.setProperty(context, value);\r\n\r\n        this.onDone._activateSignal(context);\r\n    }\r\n\r\n    public serialize(serializationObject: any = {}) {\r\n        super.serialize(serializationObject);\r\n        serializationObject.config.path = this.config.path.serialize();\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"FGSetPropertyBlock\";\r\n    }\r\n}\r\nRegisterClass(\"FGSetPropertyBlock\", FlowGraphSetPropertyBlock);\r\n"]}